{"componentChunkName":"component---src-templates-blog-post-js","path":"/2016/02/building-plone-theme-with-webpack.html/","result":{"data":{"site":{"siteMetadata":{"title":"Asko Soukka","author":"Asko Soukka"}},"markdownRemark":{"id":"0d126dbe-e245-5993-867d-e7df8237f6ba","fields":{"slug":"/2016/02/building-plone-theme-with-webpack.html/"},"excerpt":"I just fixed my old post on customizing Plone 5 default theme on the\nfly\nto work with the final Plone 5.0 release. But if you could not care less about TTW…","html":"<p>I just fixed my old post on <a href=\"http://datakurre.pandala.org/2015/05/customize-plone-5-default-theme-on-fly.html\">customizing Plone 5 default theme on the\nfly</a>\nto work with the final Plone 5.0 release.</p>\n<p>But if you could not care less about TTW (through-the-web) theme\ndevelopment, here’s something for you too: it is possible to build a\ntheme for Plone 5 with all Plone 5’s stylesheets and javascripts using\n<a href=\"https://webpack.github.io/\">Webpack</a> — the current tool of choice for\nbundling web app frontent resources.</p>\n<p>With Webpack, you can completely ignore Plone 5’s TTW resource\nregistry, and build your own optimal CSS and JS bundles with all the\nmockup patterns and other JS frameworks you need - with live preview\nduring development.</p>\n<p>To try it out, take a look at my WIP example theme at:\n<a href=\"https://github.com/datakurre/plonetheme.webpack\">https://github.com/datakurre/plonetheme.webpack</a></p>\n<p><strong>Pros:</strong></p>\n<ul>\n<li>Ship your theme with Webpack-optimized resource chunks automatically\nsplit into synchronous and asynchronously required resources.</li>\n<li>Get faster-than-reload live previews of your changes during\ndevelopment thanks to Webpack’s development server’s hot module\nreplacement support.</li>\n<li>Get complete control of Plone 5 frontend resources and completely\nbypass Plone 5 TTW resource registry (it’s awesome for TTW\nworkflow, but not optimal for thefilesystem one).</li>\n<li>Use the latest JS development tools (Webpack integrates nicely with\nBabel, ESLint and others) without need for legacy Bower, Grunt, Gulp\nor RequireJS.</li>\n</ul>\n<p><strong>Cons:</strong></p>\n<ul>\n<li>Installing a new Plone add-on requires configuring and building\nadd-on’s resources into theme.</li>\n<li>You are on your own now, because you no longer get JS / CSS updates\nwith new Python package releases, but you always need to also\nre-build your theme.</li>\n</ul>","frontmatter":{"title":"Building Plone theme with Webpack","tags":["Plone","Theming","Webpack"],"date":"February 15, 2016","published":"2016-02-15 06:00:00"}}},"pageContext":{"slug":"/2016/02/building-plone-theme-with-webpack.html/","previous":{"fields":{"slug":"/2015/11/nix-in-docker-best-of-both-worlds.html/"},"frontmatter":{"title":"Nix in Docker – Best of Both Worlds"}},"next":{"fields":{"slug":"/2016/04/building-plone-form-widget-with-react.html/"},"frontmatter":{"title":"Building Plone widget with React + Redux"}}}},"staticQueryHashes":["63159454"],"slicesMap":{}}