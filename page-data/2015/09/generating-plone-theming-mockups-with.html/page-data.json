{"componentChunkName":"component---src-templates-blog-post-js","path":"/2015/09/generating-plone-theming-mockups-with.html/","result":{"data":{"site":{"siteMetadata":{"title":"Asko Soukka","author":"Asko Soukka"}},"markdownRemark":{"id":"38e0837d-7e07-5e21-bee8-0e2f0b6d578f","fields":{"slug":"/2015/09/generating-plone-theming-mockups-with.html/"},"excerpt":"Some days ago there was a question at the Plone IRC-channel, whether the\nPlone theming tool supports template\ninheritance [sic]. The answer is no, but let’s…","html":"<p>Some days ago there was a question at the Plone IRC-channel, whether the\n<a href=\"https://www.plone.com/\">Plone</a> theming tool supports <em>template\ninheritance</em> [sic]. The answer is no, but let’s play a bit with the\nproblem.</p>\n<p>The prefered theming solution for Plone,\n<a href=\"https://pypi.python.org/pypi/plone.app.theming/\">plone.app.theming</a>, is\nbased on <a href=\"https://docs.diazo.org/\">Diazo</a> theming engine, which allows\nto make a Plone theme from any static HTML mockup. To simplify a bit,\njust get a static HTML design, write a set of Diazo transformation\nrules, and you’ll have a new Plone theme.</p>\n<p>The ideal behind this theming solution is to make the theming story for\nPlone the easiest in the CMS industry: Just buy a static HTML design and\nyou could use it as a theme as such. (Of course, the complexity of the\nrequired Diazo transformation rules depends on the complexity of the\ntheme and themed content.)</p>\n<p>But back to the original problem: Diazo encourages the themer to use a\nplenty of different HTML mockups to keep the transformation rules\nsimple. One should not try to generate theme elements for different page\ntypes in Diazo transformation rules, but use dedicated HTML mockups for\ndifferent page types. But what if the original HTML design came only\nwith a very few selected mockups, and creating the rest from those is up\nto you. You could either copy and paste, or…</p>\n<p>Here comes a proof of concept script for generating HTML mockups from\n<a href=\"https://en.wikipedia.org/wiki/Template_Attribute_Language\">TAL</a> using\n<a href=\"https://pypi.python.org/pypi/Chameleon\">Chameleon</a> template compiler\n(and <a href=\"https://nixos.org/nix/\">Nix</a> to remove need for virtualenv,\nbecause of Python dependencies).</p>\n<p>But at first, why TAL? Because METAL macros of TAL can be used to make\nthe existing static HTML mockups into re-usable macros/mixins with\ncustomizable slots with minimal effort.</p>\n<p>For example, an existing HTML mockup:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\" cm-s-solarized\"><code><span>\n&lt;html&gt;\n&lt;head&gt;...&lt;/head&gt;\n&lt;body&gt;\n...\n&lt;div&gt;\nHere be dragons.\n&lt;/div&gt;\n...\n&lt;/body&gt;\n&lt;html&gt;</span></code></pre>\n    </div>\n<p>Could be made into a re-usable TAL template (<code>main_template.html</code>) with:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\" cm-s-solarized\"><code><span>&lt;metal:master define-macro=\"master\"&gt;\n&lt;html&gt;\n&lt;head&gt;...&lt;/head&gt;\n&lt;body&gt;\n...\n&lt;div metal:define-slot=\"content\"&gt;\nHere be dragons.\n&lt;/div&gt;\n...\n&lt;/body&gt;\n&lt;html&gt;\n&lt;/metal:master&gt;</span></code></pre>\n    </div>\n<p>And re-used in a new mockup with:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\" cm-s-solarized\"><code><span>&lt;html metal:use-macro=\"main_template.macros.master\"&gt;\n&lt;body&gt;\n&lt;div metal:fill-slot=\"content\"&gt;\nThunderbirds are go!\n&lt;/div&gt;\n&lt;/body&gt;\n&lt;html&gt;</span></code></pre>\n    </div>\n<p>Resulting a new compiled mockup:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\">\n      <pre class=\" cm-s-solarized\"><code><span>&lt;html&gt;\n&lt;head&gt;...&lt;/head&gt;\n&lt;body&gt;\n...\n&lt;div&gt;\nThunderbirds are go!\n&lt;/div&gt;\n...\n&lt;/body&gt;</span></code></pre>\n    </div>\n<p>The script maps all direct sub-directories and files with <code>.html</code> suffix\nin the same directory with the compiled template into its TAL namespace,\nso that macros from those can be reached with METAL syntax\n<code>metal:use-macro=\"filebasename.macros.macroname\"</code> or\n<code>metal:use-macro=\"templatedirname['filebasename'].macros.macroname\"</code>.</p>\n<p>Finally, here comes the <a href=\"https://gist.github.com/datakurre/36fd22332baa70033c56\">example\ncode</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-comment\">#! /usr/bin/env nix-shell</span><span>\n</span><span class=\"cm-comment\">#! nix-shell -i python -p pythonPackages.chameleon pythonPackages.docopt pythonPackages.watchdog</span><span>\n</span><span class=\"cm-string\">\"\"\"Chameleon Composer</span><span>\n\n</span><span class=\"cm-string\">Copyright (c) 2015 Asko Soukka &lt;asko.soukka@iki.fi&gt;</span><span>\n\n</span><span class=\"cm-string\">Permission is hereby granted, free of charge, to any person obtaining a copy</span><span>\n</span><span class=\"cm-string\">of this software and associated documentation files (the \"Software\"), to deal</span><span>\n</span><span class=\"cm-string\">in the Software without restriction, including without limitation the rights</span><span>\n</span><span class=\"cm-string\">to use, copy, modify, merge, publish, distribute, sublicense, and/or sell</span><span>\n</span><span class=\"cm-string\">copies of the Software, and to permit persons to whom the Software is</span><span>\n</span><span class=\"cm-string\">furnished to do so, subject to the following conditions:</span><span>\n\n</span><span class=\"cm-string\">The above copyright notice and this permission notice shall be included in</span><span>\n</span><span class=\"cm-string\">all copies or substantial portions of the Software.</span><span>\n\n</span><span class=\"cm-string\">THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span><span>\n</span><span class=\"cm-string\">IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,</span><span>\n</span><span class=\"cm-string\">FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE</span><span>\n</span><span class=\"cm-string\">AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER</span><span>\n</span><span class=\"cm-string\">LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,</span><span>\n</span><span class=\"cm-string\">OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN</span><span>\n</span><span class=\"cm-string\">THE SOFTWARE.</span><span>\n\n</span><span class=\"cm-string\">Usage:</span><span>\n</span><span class=\"cm-string\">  ./compose.py &lt;filename&gt;</span><span>\n</span><span class=\"cm-string\">  ./compose.py src/front-page.html</span><span>\n</span><span class=\"cm-string\">  ./compose.py &lt;source&gt; &lt;destination&gt; [--watch]</span><span>\n</span><span class=\"cm-string\">  ./compose.py src build</span><span>\n</span><span class=\"cm-string\">  ./compose.py src build --watch</span><span>\n\n</span><span class=\"cm-string\">\"\"\"</span><span>\n</span><span class=\"cm-keyword\">from</span><span> </span><span class=\"cm-variable\">__future__</span><span> </span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">print_function</span><span>\n</span><span class=\"cm-keyword\">from</span><span> </span><span class=\"cm-variable\">chameleon</span><span> </span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">PageTemplateFile</span><span>\n</span><span class=\"cm-keyword\">from</span><span> </span><span class=\"cm-variable\">chameleon</span><span> </span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">PageTemplateLoader</span><span>\n</span><span class=\"cm-keyword\">from</span><span> </span><span class=\"cm-variable\">docopt</span><span> </span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">docopt</span><span>\n</span><span class=\"cm-keyword\">from</span><span> </span><span class=\"cm-variable\">watchdog</span><span>.</span><span class=\"cm-property\">observers</span><span> </span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">Observer</span><span>\n</span><span class=\"cm-keyword\">from</span><span> </span><span class=\"cm-variable\">watchdog</span><span>.</span><span class=\"cm-property\">observers</span><span>.</span><span class=\"cm-property\">polling</span><span> </span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">PollingObserver</span><span>\n</span><span class=\"cm-keyword\">from</span><span> </span><span class=\"cm-variable\">watchdog</span><span>.</span><span class=\"cm-property\">utils</span><span> </span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">platform</span><span>\n</span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">os</span><span>\n</span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">sys</span><span>\n</span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">time</span><span>\n\n\n</span><span class=\"cm-keyword\">def</span><span> </span><span class=\"cm-def\">render</span><span>(</span><span class=\"cm-variable\">template</span><span>):</span><span>\n</span><span>    </span><span class=\"cm-keyword\">assert</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">isfile</span><span>(</span><span class=\"cm-variable\">template</span><span>)</span><span>\n\n</span><span>    </span><span class=\"cm-comment\"># Add siblings as templates into compilation context for macro-use</span><span>\n</span><span>    </span><span class=\"cm-variable\">context</span><span> </span><span class=\"cm-operator\">=</span><span> {}</span><span>\n</span><span>    </span><span class=\"cm-variable\">dirname</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">dirname</span><span>(</span><span class=\"cm-variable\">template</span><span>)</span><span>\n</span><span>    </span><span class=\"cm-keyword\">for</span><span> </span><span class=\"cm-variable\">name</span><span> </span><span class=\"cm-keyword\">in</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">listdir</span><span>(</span><span class=\"cm-variable\">dirname</span><span>):</span><span>\n</span><span>        </span><span class=\"cm-variable\">path</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">join</span><span>(</span><span class=\"cm-variable\">dirname</span><span>, </span><span class=\"cm-variable\">name</span><span>)</span><span>\n</span><span>        </span><span class=\"cm-variable\">basename</span><span>, </span><span class=\"cm-variable\">suffix</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">splitext</span><span>(</span><span class=\"cm-variable\">name</span><span>)</span><span>\n</span><span>        </span><span class=\"cm-keyword\">if</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">isdir</span><span>(</span><span class=\"cm-variable\">path</span><span>):</span><span>\n</span><span>            </span><span class=\"cm-variable\">context</span><span>[</span><span class=\"cm-variable\">basename</span><span>] </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">PageTemplateLoader</span><span>(</span><span class=\"cm-variable\">path</span><span>, </span><span class=\"cm-string\">'.html'</span><span>)</span><span>\n</span><span>        </span><span class=\"cm-keyword\">elif</span><span> </span><span class=\"cm-variable\">suffix</span><span> </span><span class=\"cm-operator\">==</span><span> </span><span class=\"cm-string\">'.html'</span><span>:</span><span>\n</span><span>            </span><span class=\"cm-variable\">context</span><span>[</span><span class=\"cm-variable\">basename</span><span>] </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">PageTemplateFile</span><span>(</span><span class=\"cm-variable\">path</span><span>)</span><span>\n\n</span><span>    </span><span class=\"cm-keyword\">return</span><span> </span><span class=\"cm-variable\">PageTemplateFile</span><span>(</span><span class=\"cm-variable\">template</span><span>)(</span><span class=\"cm-operator\">**</span><span class=\"cm-variable\">context</span><span>).</span><span class=\"cm-property\">strip</span><span>()</span><span>\n\n\n</span><span class=\"cm-keyword\">class</span><span> </span><span class=\"cm-def\">Composer</span><span>(</span><span class=\"cm-builtin\">object</span><span>):</span><span>\n</span><span>    </span><span class=\"cm-keyword\">def</span><span> </span><span class=\"cm-def\">__init__</span><span>(</span><span class=\"cm-variable-2\">self</span><span>, </span><span class=\"cm-variable\">source</span><span>, </span><span class=\"cm-variable\">destination</span><span>):</span><span>\n</span><span>        </span><span class=\"cm-variable-2\">self</span><span>.</span><span class=\"cm-property\">source</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">source</span><span>\n</span><span>        </span><span class=\"cm-variable-2\">self</span><span>.</span><span class=\"cm-property\">destination</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">destination</span><span>\n</span><span>        </span><span class=\"cm-variable-2\">self</span><span>.</span><span class=\"cm-property\">mapping</span><span> </span><span class=\"cm-operator\">=</span><span> {}</span><span>\n</span><span>        </span><span class=\"cm-variable-2\">self</span><span>.</span><span class=\"cm-property\">update</span><span>()</span><span>\n\n</span><span>    </span><span class=\"cm-keyword\">def</span><span> </span><span class=\"cm-def\">update</span><span>(</span><span class=\"cm-variable-2\">self</span><span>):</span><span>\n</span><span>        </span><span class=\"cm-variable\">source</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable-2\">self</span><span>.</span><span class=\"cm-property\">source</span><span>\n</span><span>        </span><span class=\"cm-variable\">destination</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable-2\">self</span><span>.</span><span class=\"cm-property\">destination</span><span>\n</span><span>        </span><span class=\"cm-variable\">mapping</span><span> </span><span class=\"cm-operator\">=</span><span> {}</span><span>\n\n</span><span>        </span><span class=\"cm-comment\"># File to file</span><span>\n</span><span>        </span><span class=\"cm-keyword\">if</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">isfile</span><span>(</span><span class=\"cm-variable\">source</span><span>) </span><span class=\"cm-keyword\">and</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">splitext</span><span>(</span><span class=\"cm-variable\">destination</span><span>)[</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span><span>]:</span><span>\n</span><span>            </span><span class=\"cm-variable\">mapping</span><span>[</span><span class=\"cm-variable\">source</span><span>] </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">destination</span><span>\n\n</span><span>        </span><span class=\"cm-comment\"># File to directory</span><span>\n</span><span>        </span><span class=\"cm-keyword\">elif</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">isfile</span><span>(</span><span class=\"cm-variable\">source</span><span>) </span><span class=\"cm-keyword\">and</span><span> </span><span class=\"cm-keyword\">not</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">splitext</span><span>(</span><span class=\"cm-variable\">destination</span><span>)[</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span><span>]:</span><span>\n</span><span>            </span><span class=\"cm-variable\">mapping</span><span>[</span><span class=\"cm-variable\">source</span><span>] </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">join</span><span>(</span><span>\n</span><span>                </span><span class=\"cm-variable\">destination</span><span>,</span><span>\n</span><span>                </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">splitext</span><span>(</span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">basename</span><span>(</span><span class=\"cm-variable\">source</span><span>))[</span><span class=\"cm-number\">0</span><span>] </span><span class=\"cm-operator\">+</span><span> </span><span class=\"cm-string\">'.html'</span><span>\n</span><span>            )</span><span>\n\n</span><span>        </span><span class=\"cm-comment\"># Directory to directory</span><span>\n</span><span>        </span><span class=\"cm-keyword\">elif</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">isdir</span><span>(</span><span class=\"cm-variable\">source</span><span>):</span><span>\n</span><span>            </span><span class=\"cm-keyword\">for</span><span> </span><span class=\"cm-variable\">filename</span><span> </span><span class=\"cm-keyword\">in</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">listdir</span><span>(</span><span class=\"cm-variable\">source</span><span>):</span><span>\n</span><span>                </span><span class=\"cm-variable\">path</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">join</span><span>(</span><span class=\"cm-variable\">source</span><span>, </span><span class=\"cm-variable\">filename</span><span>)</span><span>\n</span><span>                </span><span class=\"cm-keyword\">if</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">splitext</span><span>(</span><span class=\"cm-variable\">path</span><span>)[</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span><span>] </span><span class=\"cm-operator\">!=</span><span> </span><span class=\"cm-string\">'.html'</span><span>:</span><span>\n</span><span>                    </span><span class=\"cm-keyword\">continue</span><span>\n</span><span>                </span><span class=\"cm-variable\">mapping</span><span>[</span><span class=\"cm-variable\">path</span><span>] </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">join</span><span>(</span><span>\n</span><span>                    </span><span class=\"cm-variable\">destination</span><span>,</span><span>\n</span><span>                    </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">splitext</span><span>(</span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">basename</span><span>(</span><span class=\"cm-variable\">path</span><span>))[</span><span class=\"cm-number\">0</span><span>] </span><span class=\"cm-operator\">+</span><span> </span><span class=\"cm-string\">'.html'</span><span>\n</span><span>                )</span><span>\n\n</span><span>        </span><span class=\"cm-variable-2\">self</span><span>.</span><span class=\"cm-property\">mapping</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">mapping</span><span>\n\n</span><span>    </span><span class=\"cm-keyword\">def</span><span> </span><span class=\"cm-def\">__call__</span><span>(</span><span class=\"cm-variable-2\">self</span><span>):</span><span>\n</span><span>        </span><span class=\"cm-keyword\">for</span><span> </span><span class=\"cm-variable\">source</span><span>, </span><span class=\"cm-variable\">destination</span><span> </span><span class=\"cm-keyword\">in</span><span> </span><span class=\"cm-variable-2\">self</span><span>.</span><span class=\"cm-property\">mapping</span><span>.</span><span class=\"cm-property\">items</span><span>():</span><span>\n</span><span>            </span><span class=\"cm-keyword\">if</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">dirname</span><span>(</span><span class=\"cm-variable\">destination</span><span>):</span><span>\n</span><span>                </span><span class=\"cm-keyword\">if</span><span> </span><span class=\"cm-keyword\">not</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">isdir</span><span>(</span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">dirname</span><span>(</span><span class=\"cm-variable\">destination</span><span>)):</span><span>\n</span><span>                    </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">makedirs</span><span>(</span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">path</span><span>.</span><span class=\"cm-property\">dirname</span><span>(</span><span class=\"cm-variable\">destination</span><span>))</span><span>\n</span><span>            </span><span class=\"cm-keyword\">with</span><span> </span><span class=\"cm-builtin\">open</span><span>(</span><span class=\"cm-variable\">destination</span><span>, </span><span class=\"cm-string\">'w'</span><span>) </span><span class=\"cm-keyword\">as</span><span> </span><span class=\"cm-variable\">output</span><span>:</span><span>\n</span><span>                </span><span class=\"cm-builtin\">print</span><span>(</span><span class=\"cm-string\">'{0:s} =&gt; {1:s}'</span><span>.</span><span class=\"cm-property\">format</span><span>(</span><span class=\"cm-variable\">source</span><span>, </span><span class=\"cm-variable\">destination</span><span>))</span><span>\n</span><span>                </span><span class=\"cm-variable\">output</span><span>.</span><span class=\"cm-property\">write</span><span>(</span><span class=\"cm-variable\">render</span><span>(</span><span class=\"cm-variable\">source</span><span>).</span><span class=\"cm-property\">strip</span><span>().</span><span class=\"cm-property\">encode</span><span>(</span><span class=\"cm-string\">'utf-8'</span><span>))</span><span>\n\n</span><span>    </span><span class=\"cm-comment\"># noinspection PyUnusedLocal</span><span>\n</span><span>    </span><span class=\"cm-keyword\">def</span><span> </span><span class=\"cm-def\">dispatch</span><span>(</span><span class=\"cm-variable-2\">self</span><span>, </span><span class=\"cm-variable\">event</span><span>):</span><span>\n</span><span>        </span><span class=\"cm-comment\"># TODO: Build only changed files</span><span>\n</span><span>        </span><span class=\"cm-variable-2\">self</span><span>.</span><span class=\"cm-property\">update</span><span>()</span><span>\n</span><span>        </span><span class=\"cm-variable-2\">self</span><span>.</span><span class=\"cm-property\">__call__</span><span>()</span><span>\n\n</span><span>    </span><span class=\"cm-keyword\">def</span><span> </span><span class=\"cm-def\">watch</span><span>(</span><span class=\"cm-variable-2\">self</span><span>):</span><span>\n</span><span>        </span><span class=\"cm-keyword\">if</span><span> </span><span class=\"cm-variable\">platform</span><span>.</span><span class=\"cm-property\">is_darwin</span><span>():</span><span>\n</span><span>            </span><span class=\"cm-variable\">observer</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">PollingObserver</span><span>()  </span><span class=\"cm-comment\"># Seen FSEventsObserver to segfault</span><span>\n</span><span>        </span><span class=\"cm-keyword\">else</span><span>:</span><span>\n</span><span>            </span><span class=\"cm-variable\">observer</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">Observer</span><span>()</span><span>\n</span><span>        </span><span class=\"cm-variable\">observer</span><span>.</span><span class=\"cm-property\">schedule</span><span>(</span><span class=\"cm-variable-2\">self</span><span>, </span><span class=\"cm-variable-2\">self</span><span>.</span><span class=\"cm-property\">source</span><span>, </span><span class=\"cm-variable\">recursive</span><span class=\"cm-operator\">=</span><span class=\"cm-keyword\">True</span><span>)</span><span>\n</span><span>        </span><span class=\"cm-variable\">observer</span><span>.</span><span class=\"cm-property\">start</span><span>()</span><span>\n</span><span>        </span><span class=\"cm-keyword\">try</span><span>:</span><span>\n</span><span>            </span><span class=\"cm-keyword\">while</span><span> </span><span class=\"cm-keyword\">True</span><span>:</span><span>\n</span><span>                </span><span class=\"cm-variable\">time</span><span>.</span><span class=\"cm-property\">sleep</span><span>(</span><span class=\"cm-number\">1</span><span>)</span><span>\n</span><span>        </span><span class=\"cm-keyword\">except</span><span> </span><span class=\"cm-variable\">KeyboardInterrupt</span><span>:</span><span>\n</span><span>            </span><span class=\"cm-variable\">observer</span><span>.</span><span class=\"cm-property\">stop</span><span>()</span><span>\n</span><span>        </span><span class=\"cm-variable\">observer</span><span>.</span><span class=\"cm-property\">join</span><span>()</span><span>\n</span><span>        </span><span class=\"cm-variable\">sys</span><span>.</span><span class=\"cm-property\">exit</span><span>(</span><span class=\"cm-number\">0</span><span>)</span><span>\n\n\n</span><span class=\"cm-keyword\">if</span><span> </span><span class=\"cm-variable\">__name__</span><span> </span><span class=\"cm-operator\">==</span><span> </span><span class=\"cm-string\">'__main__'</span><span>:</span><span>\n</span><span>    </span><span class=\"cm-variable\">arguments</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">docopt</span><span>(</span><span class=\"cm-variable\">__doc__</span><span>, </span><span class=\"cm-variable\">version</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">'Chameleon Composer 1.0'</span><span>)</span><span>\n\n</span><span>    </span><span class=\"cm-keyword\">if</span><span> </span><span class=\"cm-variable\">arguments</span><span>.</span><span class=\"cm-property\">get</span><span>(</span><span class=\"cm-string\">'&lt;filename&gt;'</span><span>):</span><span>\n</span><span>        </span><span class=\"cm-builtin\">print</span><span>(</span><span class=\"cm-variable\">render</span><span>(</span><span class=\"cm-variable\">arguments</span><span>.</span><span class=\"cm-property\">get</span><span>(</span><span class=\"cm-string\">'&lt;filename&gt;'</span><span>)))</span><span>\n</span><span>        </span><span class=\"cm-variable\">sys</span><span>.</span><span class=\"cm-property\">exit</span><span>(</span><span class=\"cm-number\">0</span><span>)</span><span>\n\n</span><span>    </span><span class=\"cm-variable\">composer</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">Composer</span><span>(</span><span class=\"cm-variable\">arguments</span><span>.</span><span class=\"cm-property\">get</span><span>(</span><span class=\"cm-string\">'&lt;source&gt;'</span><span>),</span><span>\n</span><span>                        </span><span class=\"cm-variable\">arguments</span><span>.</span><span class=\"cm-property\">get</span><span>(</span><span class=\"cm-string\">'&lt;destination&gt;'</span><span>))</span><span>\n</span><span>    </span><span class=\"cm-variable\">composer</span><span>()</span><span>\n\n</span><span>    </span><span class=\"cm-keyword\">if</span><span> </span><span class=\"cm-variable\">arguments</span><span>.</span><span class=\"cm-property\">get</span><span>(</span><span class=\"cm-string\">'--watch'</span><span>):</span><span>\n</span><span>        </span><span class=\"cm-builtin\">print</span><span>(</span><span class=\"cm-string\">'Watching {0:s}'</span><span>.</span><span class=\"cm-property\">format</span><span>(</span><span class=\"cm-variable\">arguments</span><span>.</span><span class=\"cm-property\">get</span><span>(</span><span class=\"cm-string\">'&lt;source&gt;'</span><span>)))</span><span>\n</span><span>        </span><span class=\"cm-variable\">composer</span><span>.</span><span class=\"cm-property\">watch</span><span>()</span></code></pre>\n    </div>","frontmatter":{"title":"Generating Plone theming mockups with Chameleon","tags":["Chameleon","Diazo","Plone","Templating","Theming"],"date":"September 06, 2015","published":"2015-09-06 06:00:00"}}},"pageContext":{"slug":"/2015/09/generating-plone-theming-mockups-with.html/","previous":{"fields":{"slug":"/2015/07/building-docker-containers-from-scratch.html/"},"frontmatter":{"title":"Building Docker containers from scratch using Nix"}},"next":{"fields":{"slug":"/2015/10/nix-for-python-developers.html/"},"frontmatter":{"title":"Nix for Python developers"}}}},"staticQueryHashes":["63159454"],"slicesMap":{}}