{"componentChunkName":"component---src-templates-blog-post-js","path":"/2013/09/documentation-plausible-excuse-for.html/","result":{"data":{"site":{"siteMetadata":{"title":"Asko Soukka","author":"Asko Soukka"}},"markdownRemark":{"id":"182d8179-efec-593f-96ce-79f39e69ecf0","fields":{"slug":"/2013/09/documentation-plausible-excuse-for.html/"},"excerpt":"Or how to use Sphinx to create user guides\nwith screenshots, which are automatically generated, annotated and\nkept up-to-date using Robot Framework\nand\nSelenium…","html":"<blockquote>\n<p>Or how to use <a href=\"http://sphinx-doc.org/\">Sphinx</a> to create user guides\nwith screenshots, which are automatically generated, annotated and\nkept up-to-date using <a href=\"http://robotframework.org/\">Robot Framework</a>\nand\n<a href=\"http://pypi.python.org/pypi/robotframework-selenium2library\">Selenium</a>.</p>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <p style=\"text-align: center;\"><iframe src=\"http://www.youtube.com/embed/87G4QiIqQCY\" frameborder=\"0\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe></p> </div>\n</blockquote>\n<p>I’m sure that this is not the first time when someone proposes to mix\ndocumentation with acceptance testing, but this time it <em>should</em> feel\ndifferent.</p>\n<p>Any decent user documentation should include a good amount of\nscreenshots. Unfortunately, good screenshots are pain to make, edit and\nkeep up-to-date…</p>\n<p>I’ve been mentoring Vivek Kumar Verma in this years Google Summer of\nCode to implement a <a href=\"https://www.google-melange.com/gsoc/project/google/gsoc2013/vivekkodu/16001\">better ReStructureText parser into Robot\nFramework</a>.\nA part of his GSOC project was to implement a Sphinx-plugin to execute\nembedded Robot Framework tests while compiling the documentation.</p>\n<p>Now, after a summer of co-operation with me and Vivek around this GSOC\ntopic, I have good news for you all:</p>\n<h2>How to create a new Sphinx-based documentation with generated screenshots</h2>\n<ol>\n<li>\n<p><a href=\"http://www.virtualenv.org/\">Create and activate a new Python\nvirtualenv.</a></p>\n</li>\n<li>\n<p>Install package\n<a href=\"http://pypi.python.org/pypi/sphinxcontrib-robotframework\">sphinxcontrib-robotframework</a>\nwith <em>docs</em>-extras to get all the required packages for executing\n<a href=\"http://pypi.python.org/pypi/robotframework-selenium2library\">Selenium</a>-tests\nwith\n<a href=\"http://pypi.python.org/pypi/robotframework-selenium2screenshots\">robotframework-selenium2screenshots</a>-library:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ pip</span><span> install </span><span class=\"cm-string\">'sphinxcontrib-robotframework[docs]'</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Create a source directory for you documentation:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ mkdir</span><span> </span><span class=\"cm-builtin\">source</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Create a minimal Sphinx-configuration file with our plugin enabled\nby creating the following <code>./source/conf.py</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-variable\">extensions</span><span> </span><span class=\"cm-operator\">=</span><span> [</span><span class=\"cm-string\">'sphinxcontrib_robotframework'</span><span>]</span><span>\n</span><span class=\"cm-variable\">master_doc</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-string\">'index'</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Dump the following example documentation into <code>./source/index.rst</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"restructuredtext\">\n      <pre class=\" cm-s-solarized\"><code><span>How to vote in Plone Innovation Awards?\n---------------------------------------\n\nChoose your nominee by going to http://ploneawards.com/ and clicking the\nnext button until you find something you like:\n\n.. image:: choosing-nominee.png\n   :width: 800\n\nOnce you have found your favorite, just click the *vote*-button to tweet\nyour vote:\n\n.. image:: voting-nominee.png\n   :width: 800\n\n.. code:: robotframework\n\n   *** Settings ***\n\n   Library  Selenium2Library\n   Library  Selenium2Screenshots\n\n   Suite Teardown  Close all browsers\n\n   *** Test Cases ***\n\n   Open Plone Awards\n       Open browser  http://ploneawards.com\n       Set window size   1024  768\n\n   Show how to browse\n       ${note} =  Add pointy note  css=#carousel a.next.browse\n       ...  Click here to browse through the nominees\n       ...  position=left\n       Capture and crop page screenshot  choosing-nominee.png\n       ...  css=#carousel  ${note}\n       Remove elements  ${note}\n\n   Tag a nominee\n       Page should contain element  xpath=//a[contains(@href, 'robots')]\n       Assign id to element\n       ...  xpath=//a[contains(@href, 'robots')]/ancestor::div[@class='awardinfo']\n       ...  chosen-nominee\n\n   Choose a Plone Award nominee\n       Wait until keyword succeeds\n       ...  60s  2s\n       ...  Chosen nominee should be visible\n\n   Show how to vote\n       ${note} =  Add pointy note  css=#chosen-nominee .votebutton\n       ...  Click here to vote\n       ...  position=bottom\n       Capture and crop page screenshot  voting-nominee.png\n       ...  css=#carousel  ${note}\n\n   *** Keywords ***\n\n   Chosen nominee should be visible\n       ${invisible} =  Run keyword and return status\n       ...  Element should not be visible  chosen-nominee\n       Run keyword if  ${invisible}\n       ...  Click link  css=#carousel a.next.browse\n       Wait until element is visible  chosen-nominee  1s</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Build the documentation:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ sphinx</span><span class=\"cm-attribute\">-build</span><span> </span><span class=\"cm-builtin\">source</span><span> build</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Wait for a while by watching something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span>Making output directory...</span><span>\n</span><span>Running Sphinx v1.2b2</span><span>\n</span><span>loading pickled environment... not yet created</span><span>\n</span><span>No builder selected, using default: html</span><span>\n</span><span>building [html]: targets </span><span class=\"cm-keyword\">for</span><span> </span><span class=\"cm-number\">1</span><span> </span><span class=\"cm-builtin\">source</span><span> files that are out of date</span><span>\n</span><span>updating environment: </span><span class=\"cm-number\">1</span><span> added, </span><span class=\"cm-number\">0</span><span> changed, </span><span class=\"cm-number\">0</span><span> removed</span><span>\n</span><span>reading sources... [100%] index</span><span>\n</span><span>.../source/index.rst:None: WARNING: image file not readable: choosing-nominee.png</span><span>\n</span><span>.../source/index.rst:None: WARNING: image file not readable: voting-nominee.png</span><span>\n</span><span>looking </span><span class=\"cm-keyword\">for</span><span> now-outdated files... none found</span><span>\n</span><span>pickling environment... </span><span class=\"cm-keyword\">done</span><span>\n</span><span>checking consistency... </span><span class=\"cm-keyword\">done</span><span>\n</span><span>preparing documents... </span><span class=\"cm-keyword\">done</span><span>\n</span><span class=\"cm-operator\">========================================================================</span><span>\n</span><span>tmpl4e3nU</span><span>\n</span><span class=\"cm-operator\">========================================================================</span><span>\n</span><span>Open Plone Awards                                               | PASS |</span><span>\n</span><span class=\"cm-attribute\">------------------------------------------------------------------------</span><span>\n</span><span>Show how to browse                                              | PASS |</span><span>\n</span><span class=\"cm-attribute\">------------------------------------------------------------------------</span><span>\n</span><span>Tag a nominee                                                   | PASS |</span><span>\n</span><span class=\"cm-attribute\">------------------------------------------------------------------------</span><span>\n</span><span>Choose a Plone Award nominee                                    | PASS |</span><span>\n</span><span class=\"cm-attribute\">------------------------------------------------------------------------</span><span>\n</span><span>Show how to vote                                                | PASS |</span><span>\n</span><span class=\"cm-attribute\">------------------------------------------------------------------------</span><span>\n</span><span>tmpl4e3nU                                                       | PASS |</span><span>\n</span><span class=\"cm-number\">5</span><span> critical tests, </span><span class=\"cm-number\">5</span><span> passed, </span><span class=\"cm-number\">0</span><span> failed</span><span>\n</span><span class=\"cm-number\">5</span><span> tests total, </span><span class=\"cm-number\">5</span><span> passed, </span><span class=\"cm-number\">0</span><span> failed</span><span>\n</span><span class=\"cm-operator\">========================================================================</span><span>\n</span><span>Output:  None</span><span>\n\n</span><span>writing additional files... genindex search</span><span>\n</span><span>copying images... [100%] choosing-nominee.png</span><span>\n</span><span>copying static files... </span><span class=\"cm-keyword\">done</span><span>\n</span><span>copying extra files... dumping search index... </span><span class=\"cm-keyword\">done</span><span>\n</span><span>dumping object inventory... </span><span class=\"cm-keyword\">done</span><span>\n</span><span>build succeeded, </span><span class=\"cm-number\">2</span><span> warnings.</span></code></pre>\n    </div>\n</li>\n<li>\n<p>See the results in <code>./build/index.html</code>, just like in this video:</p>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <p style=\"text-align: center;\"><iframe src=\"http://www.youtube.com/embed/1ZPZnwANx8I\" frameborder=\"0\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe></p> </div>\n</li>\n</ol>\n<p>Of course, it would be nice to do the same continuously with a code in\ndevelopment in a sandboxed environment. Luckily, with Plone, that’s\ntrivial with\n<a href=\"http://pypi.python.org/pypi/plone.app.robotframework\">plone.app.robotframework</a>.</p>\n<h2>Generating screenshots for a Plone add-on</h2>\n<ol>\n<li>\n<p>As always, we need a <code>bootstrap.py</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ curl</span><span> </span><span class=\"cm-attribute\">-O</span><span> http://downloads.buildout.org/2/bootstrap.py</span></code></pre>\n    </div>\n</li>\n<li>\n<p>And <code>buildout.cfg</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"properties\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-header\">[buildout]</span><span>\n</span><span class=\"cm-def\">extends </span><span>=</span><span class=\"cm-quote\"> http</span><span>:</span><span class=\"cm-quote\">//dist.plone.org/release/4.3-latest/versions.cfg</span><span>\n</span><span class=\"cm-def\">versions </span><span>=</span><span class=\"cm-quote\"> versions</span><span>\n</span><span class=\"cm-def\">parts </span><span>=</span><span class=\"cm-quote\"> sphinx-build</span><span>\n\n</span><span class=\"cm-header\">[sphinx-build]</span><span>\n</span><span class=\"cm-def\">recipe </span><span>=</span><span class=\"cm-quote\"> zc.recipe.egg</span><span>\n</span><span class=\"cm-def\">eggs </span><span>=</span><span>\n</span><span class=\"cm-def\">    Sphinx</span><span>\n</span><span class=\"cm-def\">    collective.cover[test]</span><span>\n</span><span class=\"cm-def\">    sphinxcontrib-robotframework[docs]</span><span>\n</span><span class=\"cm-def\">    plone.app.robotframework</span><span>\n</span><span class=\"cm-def\">scripts </span><span>=</span><span class=\"cm-quote\"> sphinx-build</span><span>\n\n</span><span class=\"cm-header\">[versions]</span><span>\n</span><span class=\"cm-def\">collective.cover </span><span>=</span><span class=\"cm-quote\"> 1.0a4</span><span>\n</span><span class=\"cm-def\">selenium </span><span>=</span><span class=\"cm-quote\"> 2.35.0</span><span>\n</span><span class=\"cm-def\">robotframework-selenium2library </span><span>=</span><span class=\"cm-quote\"> 1.4.0</span><span>\n</span><span class=\"cm-comment\"># These versions are from collective.cover/versions.cfg</span><span>\n</span><span class=\"cm-def\">plone.app.blocks </span><span>=</span><span class=\"cm-quote\"> 1.1.1</span><span>\n</span><span class=\"cm-def\">plone.app.drafts </span><span>=</span><span class=\"cm-quote\"> 1.0a2</span><span>\n</span><span class=\"cm-def\">plone.app.jquery </span><span>=</span><span class=\"cm-quote\"> 1.7.2</span><span>\n</span><span class=\"cm-def\">plone.app.jquerytools </span><span>=</span><span class=\"cm-quote\"> 1.5.5</span><span>\n</span><span class=\"cm-def\">plone.app.tiles </span><span>=</span><span class=\"cm-quote\"> 1.0.1</span><span>\n</span><span class=\"cm-def\">plone.tiles </span><span>=</span><span class=\"cm-quote\"> 1.2</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Run the buildout:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ python</span><span> bootstrap.py</span><span>\n</span><span class=\"cm-def\">$ bin</span><span>/buildout</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Create a source directory for you documentation:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ mkdir</span><span> </span><span class=\"cm-builtin\">source</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Create a minimal Sphinx-configuration with our plugin enabled by\ncreating a file <code>./source/conf.py</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-variable\">extensions</span><span> </span><span class=\"cm-operator\">=</span><span> [</span><span class=\"cm-string\">'sphinxcontrib_robotframework'</span><span>]</span><span>\n</span><span class=\"cm-variable\">master_doc</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-string\">'index'</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Add the following <code>./source/index.rst</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"restructuredtext\">\n      <pre class=\" cm-s-solarized\"><code><span>My first cover page\n===================\n\nThis tutorial will show, how to create your first cover page.\n\n.. code:: robotframework\n   :class: hidden\n\n   *** Settings ***\n\n   Resource  plone/app/robotframework/server.robot\n\n   Library  Selenium2Screenshots\n\n   Suite Setup  Setup Plone site with Cover\n   Suite Teardown  Run keywords  Teardown Plone site  Close all browsers\n\n   *** Keywords ***\n\n   Setup Plone site with Cover\n       Setup Plone site  collective.cover.testing.FUNCTIONAL_TESTING\n       ...  plone.app.robotframework.testing.AUTOLOGIN_LIBRARY_FIXTURE\n       Import library  Remote  ${PLONE_URL}/RobotRemote\n\n       Enable autologin as  Site Administrator\n       Set autologin username  test-user-1\n\n       Set window size  1024  768\n\nAt first, open the *Add new...*-menu and select *Cover*:\n\n.. image:: add-menu-cover.png\n\n.. code:: robotframework\n   :class: hidden\n\n   *** Test Cases ***\n\n   Open the Plone site\n       Go to  ${PLONE_URL}\n\n   Open the Add new menu\n       Click link  css=#plone-contentmenu-factories dt a\n       Element should be visible\n       ...  css=#plone-contentmenu-factories dd.actionMenuContent\n\n   Show how to add a new cover\n       ${note1}  Add pointy note  plone-contentmenu-factories\n       ...  Click here to open the menu\n       ...  position=top\n       ${note2}  Add pointy note  collective-cover-content\n       ...  Click here to add a new Cover-page\n       ...  position=left\n       Capture and crop page screenshot  add-menu-cover.png\n       ...  css=#plone-contentmenu-factories .actionMenuContent\n       ...  ${note1}  ${note2}\n\nNext, you should see a form like this:\n\n.. image:: add-form-cover.png\n\n.. code:: robotframework\n   :class: hidden\n\n   *** Test Cases ***\n\n   Add a new Cover page\n       Click link  collective-cover-content\n       Page should contain element  form-widgets-IBasic-title\n\n   Show how to fill the form\n       Set window size  640  768\n       ${note1}  Add note  form-widgets-IBasic-title\n       ...  For a front-page, enter the title of your site here\n       ...  width=400\n       ${note2}  Add note  form-widgets-IBasic-description\n       ...  For a front-page, enter the description for your site here\n       ...  width=400\n       ${note3}  Add pointy note  form-widgets-template_layout\n       ...  Select a layout to start with\n       ...  position=bottom\n       ${note4}  Add note  canvas-layout\n       ...  A preview of the selected layout will be updated here\n       ${note5}  Add pointy note  form-buttons-save\n       ...  Finally, click save\n       ...  position=right\n       Capture and crop page screenshot  add-form-cover.png\n       ...  content  ${note1}  ${note2}  ${note3}  ${note4}  ${note 5}</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Build the documentation:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ sphinx</span><span class=\"cm-attribute\">-build</span><span> </span><span class=\"cm-builtin\">source</span><span> build</span></code></pre>\n    </div>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <p style=\"text-align: center;\"><iframe src=\"http://www.youtube.com/embed/87G4QiIqQCY\" frameborder=\"0\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe></p> </div>\n</li>\n</ol>\n<p>P.S. Robot Framework 2.8.3 should include our GSOC code to support\nexecuting this kind of documentation normally as Robot Framework test\nsuite.</p>","frontmatter":{"title":"Documentation – a plausible excuse for acceptance testing","tags":["Plone","Robot Framework","Selenium","Sphinx"],"date":"September 20, 2013","published":"2013-09-20 06:00:00"}}},"pageContext":{"slug":"/2013/09/documentation-plausible-excuse-for.html/","previous":{"fields":{"slug":"/2013/08/write-testable-documentation-with-robot.html/"},"frontmatter":{"title":"Write testable documentation with Robot Framework"}},"next":{"fields":{"slug":"/2013/09/your-commit-broke-my-blog.html/"},"frontmatter":{"title":"Blogging examples of use with automated screenshots"}}}},"staticQueryHashes":["63159454"],"slicesMap":{}}