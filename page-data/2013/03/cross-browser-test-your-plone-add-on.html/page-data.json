{"componentChunkName":"component---src-templates-blog-post-js","path":"/2013/03/cross-browser-test-your-plone-add-on.html/","result":{"data":{"site":{"siteMetadata":{"title":"Asko Soukka","author":"Asko Soukka"}},"markdownRemark":{"id":"7923697d-2aea-54b9-b3f1-86ae9c587b42","fields":{"slug":"/2013/03/cross-browser-test-your-plone-add-on.html/"},"excerpt":"Thanks to Rok Garbas, I became aware of Sauce\nLabs during the Plone testing\nsprint. Finally, I had some time to try it myself, and I managed to make it workâ€¦","html":"<p>Thanks to <a href=\"http://garbas.si/\">Rok Garbas</a>, I became aware of <a href=\"http://saucelabs.com\">Sauce\nLabs</a> during the <a href=\"http://www.coactivate.org/projects/barcelona-sprint/project-home\">Plone testing\nsprint</a>.</p>\n<p>Finally, I had some time to try it myself, and I managed to make it work\npretty well with Robot Framework and Travis-CI:\n<a href=\"http://travis-ci.org/datakurre/example.product\"><img src=\"https://secure.travis-ci.org/datakurre/example.product.png\" alt=\"travis\"></a>\n<a href=\"https://saucelabs.com/u/exampleproduct\"><img src=\"https://saucelabs.com/buildstatus/exampleproduct\" alt=\"saucelabs\"></a></p>\n<p>I try to start from the very beginning, but if you already have Robot\nFramework tests, or even Travis-CI-integration, you could just skip\nthese initial steps.</p>\n<h2>Bootstrap Templer</h2>\n<p>Create buildout directory for Templer installation:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ mkdir</span><span> templer-buildout</span><span>\n</span><span class=\"cm-def\">$ cd</span><span> templer-buildout/</span></code></pre>\n    </div>\n<p>Get <code>bootstrap.py</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ curl</span><span> </span><span class=\"cm-attribute\">-o</span><span> http://downloads.buildout.org/2/bootstrap.py</span></code></pre>\n    </div>\n<p>Create <code>buildout.cfg</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"properties\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-header\">[buildout]</span><span>\n</span><span class=\"cm-def\">parts </span><span>=</span><span class=\"cm-quote\"> templer</span><span>\n\n</span><span class=\"cm-header\">[templer]</span><span>\n</span><span class=\"cm-def\">recipe </span><span>=</span><span class=\"cm-quote\"> zc.recipe.egg</span><span>\n</span><span class=\"cm-def\">eggs </span><span>=</span><span>\n</span><span class=\"cm-def\">    templer.core</span><span>\n</span><span class=\"cm-def\">    templer.plone</span></code></pre>\n    </div>\n<p>Run bootstrap and buildout to install Templer:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ python</span><span> bootstrap.py</span><span>\n</span><span class=\"cm-def\">$ bin</span><span>/buildout</span></code></pre>\n    </div>\n<h2>Create a new product with Templer</h2>\n<p>Call the buildout-installed to create a new product with Robot Framework\ntest example:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ templer</span><span class=\"cm-attribute\">-buildout</span><span>/bin/templer plone_basic example.product</span></code></pre>\n    </div>\n<p>Be careful to answer <code>true</code> for the following question about including\nRobot test templates:</p>\n<div class=\"gatsby-highlight\" data-language=\"null\">\n      <pre class=\" cm-s-solarized\"><code><span>robot tests (should the default robot test be included) [false]: true</span></code></pre>\n    </div>\n<p>Run buildout:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ cd</span><span> example.product</span><span>\n</span><span class=\"cm-def\">$ python</span><span> bootstrap.py </span><span class=\"cm-attribute\">--distribute</span><span>\n</span><span class=\"cm-def\">$ bin</span><span>/buildout</span></code></pre>\n    </div>\n<h2>Update Robot Framework tests to be Selenium grid ready</h2>\n<p>Using Sauce Labs with Robot Framework (Selenium library) is similar to\nusing robot with your own selenium grid. It mainly requires making the\nbrowser opening keyword configurable with a few selected variables.</p>\n<p>Update <code>src/example/product/tests/robot_test.txt</code> with:</p>\n<div class=\"gatsby-highlight\" data-language=\"robotframework\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-header\">*** Settings ***</span><span>\n\n</span><span class=\"cm-meta\">Library</span><span>  </span><span class=\"cm-string\">Selenium2Library</span><span>  </span><span class=\"cm-attribute\">timeout</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">10</span><span>  </span><span class=\"cm-attribute\">implicit_wait</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">0.5</span><span>\n\n</span><span class=\"cm-meta\">Suite Setup</span><span>  </span><span class=\"cm-keyword\">Start</span><span> </span><span class=\"cm-keyword\">browser</span><span>\n</span><span class=\"cm-meta\">Suite Teardown</span><span>  </span><span class=\"cm-keyword\">Close</span><span> </span><span class=\"cm-keyword\">All</span><span> </span><span class=\"cm-keyword\">Browsers</span><span>\n\n</span><span class=\"cm-header\">*** Variables ***</span><span>\n\n</span><span class=\"cm-variable-2\">${ZOPE_HOST}</span><span>  </span><span class=\"cm-string\">localhost</span><span>\n</span><span class=\"cm-variable-2\">${ZOPE_PORT}</span><span>  </span><span class=\"cm-string\">55001</span><span>\n</span><span class=\"cm-variable-2\">${ZOPE_URL}</span><span>  </span><span class=\"cm-operator\">http://${ZOPE_HOST}:</span><span class=\"cm-variable-2\">${ZOPE_PORT</span><span class=\"cm-variable-2\">}</span><span>\n\n</span><span class=\"cm-variable-2\">${PLONE_SITE_ID}</span><span>  </span><span class=\"cm-string\">plone</span><span>\n</span><span class=\"cm-variable-2\">${PLONE_URL}</span><span>  </span><span class=\"cm-variable-2\">${ZOPE_URL}</span><span class=\"cm-string\">/</span><span class=\"cm-variable-2\">${PLONE_SITE_ID</span><span class=\"cm-variable-2\">}</span><span>\n\n</span><span class=\"cm-variable-2\">${BROWSER}</span><span>  </span><span class=\"cm-string\">Firefox</span><span>\n</span><span class=\"cm-variable-2\">${REMOTE_URL</span><span class=\"cm-variable-2\">}</span><span>\n</span><span class=\"cm-variable-2\">${DESIRED_CAPABILITIES}</span><span>  </span><span class=\"cm-operator\">platform:</span><span class=\"cm-string\">Linux</span><span>\n</span><span class=\"cm-variable-2\">${BUILD_NUMBER}</span><span>  </span><span class=\"cm-string\">manual</span><span>\n\n</span><span class=\"cm-header\">*** Test Cases ***</span><span>\n\n</span><span class=\"cm-string header\">Plone site</span><span>\n</span><span class=\"cm-bracket\">    </span><span class=\"cm-meta\">[Tags]</span><span class=\"cm-bracket\">  </span><span class=\"cm-tag\">start</span><span>\n</span><span>    </span><span class=\"cm-keyword\">Go</span><span> </span><span class=\"cm-keyword\">to</span><span>  </span><span class=\"cm-variable-2\">${PLONE_URL</span><span class=\"cm-variable-2\">}</span><span>\n</span><span>    </span><span class=\"cm-keyword\">Page</span><span> </span><span class=\"cm-keyword\">should</span><span> </span><span class=\"cm-keyword\">contain</span><span>  </span><span class=\"cm-string\">Plone</span><span> </span><span class=\"cm-string\">site</span><span>\n\n</span><span class=\"cm-header\">*** Keywords ***</span><span>\n\n</span><span class=\"cm-def\">Start</span><span> </span><span class=\"cm-def\">browser</span><span>\n</span><span>    </span><span class=\"cm-variable-2\">${BUILD_INFO}</span><span> </span><span class=\"cm-operator\">=</span><span>  </span><span class=\"cm-keyword\">Set</span><span> </span><span class=\"cm-keyword\">variable</span><span>\n</span><span>    </span><span class=\"cm-bracket\">...</span><span>           </span><span class=\"cm-operator\">build:${BUILD_NUMBER},name:</span><span class=\"cm-variable-2\">${SUITE_NAME}</span><span> </span><span class=\"cm-bracket\">|</span><span> </span><span class=\"cm-variable-2\">${TEST_NAME</span><span class=\"cm-variable-2\">}</span><span>\n</span><span>    </span><span class=\"cm-keyword\">Open</span><span> </span><span class=\"cm-keyword\">browser</span><span>  </span><span class=\"cm-variable-2\">${PLONE_URL}</span><span>  </span><span class=\"cm-variable-2\">${BROWSER</span><span class=\"cm-variable-2\">}</span><span>\n</span><span>    </span><span class=\"cm-bracket\">...</span><span>           </span><span class=\"cm-attribute\">remote_url</span><span class=\"cm-operator\">=</span><span class=\"cm-variable-2\">${REMOTE_URL</span><span class=\"cm-variable-2\">}</span><span>\n</span><span>    </span><span class=\"cm-bracket\">...</span><span>           </span><span class=\"cm-attribute\">desired_capabilities</span><span class=\"cm-operator\">=</span><span class=\"cm-variable-2\">${DESIRED_CAPABILITIES}</span><span class=\"cm-string\">,</span><span class=\"cm-variable-2\">${BUILD_INFO</span><span class=\"cm-variable-2\">}</span></code></pre>\n    </div>\n<p>Let me explain what all those variables are about:</p>\n<ul>\n<li><strong>ZOPE_HOST</strong> should match the host for which ZServer is started\nduring the test setup (ZServer host is configured with\n<strong>ZSERVER_HOST</strong>-environment variable. It defaults to\n<strong>localhost</strong>.</li>\n<li><strong>ZOPE_PORT</strong> should match the port number which ZServer is started\nto listen during the test setup (ZServer pot is configured with\n<strong>ZSERVER_PORT</strong>-environment variable. It defaults to 55001, but we\nreconfigure it later by environment variables with one of the ports\ncurrently supported by Sauce Labs.</li>\n<li><strong>ZOPE_URL</strong> is a convenience variable for accessing Zope\napplication root.</li>\n<li><strong>PLONE_SITE_ID</strong> is the Plone portal object id (and path name)\nfor the test site. It default to <strong>plone</strong>, but it can be configured\nwith <strong>PLONE_SITE_ID</strong>-environment variable. The default should be\nok for most cases.</li>\n<li><strong>PLONE_URL</strong> is a convenience variable for accessing the Plone\nsite front-page.</li>\n<li><strong>BROWSER</strong> selects the browser to run the tests with. The supported\nvalues depend on Selenium Python-package and can also be read from\nthe documentation of <strong>Open browser</strong>-keyword in <a href=\"http://rtomac.github.com/robotframework-selenium2library/doc/Selenium2Library.html\">Selenium2Library\nkeywords</a>\ndocumentation.</li>\n<li><strong>REMOTE_URL</strong> enables testing with Selenium grid by defining the\nurl of the Selenium hub to use.</li>\n<li><strong>DESIRED_CAPABILITIES</strong> is used to pass various extra parameters\nfor Selenium hub (e.g. the browser version to use or test metadata).</li>\n<li><strong>BUILD_NUMBER</strong> is used to identify the Travis-CI build on <strong>Sauce\nLabs</strong>.</li>\n</ul>\n<p>When robot tests for Plone are run using <code>bin/test</code>, all the variables\nabove can be overridden by defining corresponding <strong>ROBOT_</strong>-prefixed\nenvironment variable (e.g. <strong>ROBOT_REMOTE_URL</strong>).</p>\n<h2>Add Travis-CI configuration with Sauce Labs -support</h2>\n<p>There are a few steps in adding Travis-CI-support into your product.</p>\n<p>At first, create <code>travis.cfg</code> to do the required magic for minimizing\nbuildout-time and setting a few required environment variables. Thanks\nto the great community, we can just extend a public template:</p>\n<div class=\"gatsby-highlight\" data-language=\"properties\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-header\">[buildout]</span><span>\n</span><span class=\"cm-def\">extends </span><span>=</span><span>\n</span><span class=\"cm-def\">    https</span><span>:</span><span class=\"cm-quote\">//raw.github.com/collective/buildout.plonetest/master/travis-4.x.cfg</span><span>\n\n</span><span class=\"cm-def\">package-name </span><span>=</span><span class=\"cm-quote\"> example.product</span><span>\n</span><span class=\"cm-def\">package-extras </span><span>=</span><span class=\"cm-quote\"> [test]</span><span>\n\n</span><span class=\"cm-def\">allow-hosts +</span><span>=</span><span>\n</span><span class=\"cm-def\">    code.google.com</span><span>\n</span><span class=\"cm-def\">    robotframework.googlecode.com</span><span>\n\n</span><span class=\"cm-header\">[versions]</span><span>\n</span><span class=\"cm-def\">plone.app.testing </span><span>=</span><span class=\"cm-quote\"> 4.2.2</span><span>\n\n</span><span class=\"cm-header\">[environment]</span><span>\n</span><span class=\"cm-def\">ZSERVER_PORT</span><span>=</span><span class=\"cm-quote\"> 8080</span><span>\n</span><span class=\"cm-def\">ROBOT_ZOPE_PORT</span><span>=</span><span class=\"cm-quote\"> 8080</span><span>\n\n</span><span class=\"cm-header\">[test]</span><span>\n</span><span class=\"cm-def\">environment </span><span>=</span><span class=\"cm-quote\"> environment</span></code></pre>\n    </div>\n<p>Create <code>.travis.yml</code> for letting Travis-CI to know how the environment\nshould be set up and the tests run:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">---</span><span>\n</span><span class=\"cm-atom\">language</span><span class=\"cm-meta\">: </span><span>python</span><span>\n</span><span class=\"cm-atom\">python</span><span class=\"cm-meta\">: </span><span class=\"cm-string\">'2.7'</span><span>\n</span><span class=\"cm-atom\">install</span><span class=\"cm-meta\">:</span><span>\n</span><span class=\"cm-meta\">- </span><span>mkdir -p buildout-cache/downloads</span><span>\n</span><span class=\"cm-meta\">- </span><span>python bootstrap.py -c travis.cfg</span><span>\n</span><span class=\"cm-meta\">- </span><span>bin/buildout -N -t 3 -c travis.cfg</span><span>\n</span><span class=\"cm-meta\">- </span><span>curl -O http://saucelabs.com/downloads/Sauce-Connect-latest.zip</span><span>\n</span><span class=\"cm-meta\">- </span><span>unzip Sauce-Connect-latest.zip</span><span>\n</span><span class=\"cm-meta\">- </span><span>java -jar Sauce-Connect.jar $SAUCE_USERNAME $SAUCE_ACCESS_KEY -i $TRAVIS_JOB_ID</span><span>\n</span><span>  -f CONNECTED &amp;</span><span>\n</span><span class=\"cm-meta\">- </span><span>JAVA_PID=$!</span><span>\n</span><span class=\"cm-atom\">before_script</span><span class=\"cm-meta\">:</span><span>\n</span><span class=\"cm-meta\">- </span><span>bash -c </span><span class=\"cm-string\">\"while [ ! -f CONNECTED ]; do sleep 2; done\"</span><span>\n</span><span class=\"cm-atom\">script</span><span class=\"cm-meta\">: </span><span>bin/test</span><span>\n</span><span class=\"cm-atom\">after_script</span><span class=\"cm-meta\">:</span><span>\n</span><span class=\"cm-meta\">- </span><span>kill $JAVA_PID</span><span>\n</span><span class=\"cm-atom\">env</span><span class=\"cm-meta\">:</span><span>\n</span><span class=\"cm-atom\">  global</span><span class=\"cm-meta\">:</span><span>\n</span><span class=\"cm-meta\">  - </span><span>ROBOT_BUILD_NUMBER=travis-$TRAVIS_BUILD_NUMBER</span><span>\n</span><span class=\"cm-meta\">  - </span><span>ROBOT_REMOTE_URL=http://$SAUCE_USERNAME:$SAUCE_ACCESS_KEY@ondemand.saucelabs.com:80/wd/hub</span><span>\n</span><span class=\"cm-atom\">  matrix</span><span class=\"cm-meta\">:</span><span>\n</span><span class=\"cm-meta\">  - </span><span>ROBOT_BROWSER=firefox ROBOT_DESIRED_CAPABILITIES=tunnel-identifier:$TRAVIS_JOB_ID</span><span>\n</span><span class=\"cm-meta\">  - </span><span>ROBOT_BROWSER=ie ROBOT_DESIRED_CAPABILITIES=tunnel-identifier:$TRAVIS_JOB_ID</span><span>\n</span><span class=\"cm-meta\">  - </span><span>ROBOT_DESIRED_CAPABILITIES=</span><span class=\"cm-string\">\"platform:OS X 10.8,browserName:iPad,version:6,tunnel-identifier:$TRAVIS_JOB_ID\"</span></code></pre>\n    </div>\n<p>Let me describe:</p>\n<ol>\n<li>Lines 4-7: Run buildout.</li>\n<li>Lines 8-14: Download and start Sauce Connect.</li>\n<li>Line 15: Run tests.</li>\n<li>Lines 16-17: Shutdown Sauce Connect.</li>\n<li>Lines 18-21: Define required environment variables for letting robot\nto use Sauce Labs.</li>\n<li>Lines 22-25: Define build matrix for running the tests with Sauce\nLabsâ€™ default Firefox, Internet Explorer and Mobile Safari.\n<strong>tunnel-identifier</strong>-stuff is required for Sauce Labs to allow more\nthan one simultaneous tunnels for the same user account.</li>\n</ol>\n<p>Next, define your Sauce Labs username and access key as secret,\nencrypted, environment variables <strong>SAUCE_USERNAME</strong> and\n<strong>SAUCE_ACCESS_KEY</strong>.</p>\n<p>Currently, Sauce Labs offers unlimited free subscription with three\nsimultaneous connections (e.g. running tests for three different\nbrowsers at the same time) for Open Source projects. Just make sure to\nregister the account for your project, not yourself. Public repository\nurl is required for the creating the account and it cannot be changed\nafterwards.</p>\n<ol>\n<li>\n<p>Install Travis gem for Ruby (and install Ruby before that when\nrequired):</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ gem</span><span> install travis  </span><span class=\"cm-comment\"># or sudo gem ...</span></code></pre>\n    </div>\n</li>\n<li>\n<p>use <strong>travis</strong>-command to insert encrypted environment variables\ninto the productâ€™s <code>.travis.yml</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ travis</span><span> encrypt </span><span class=\"cm-def\">SAUCE_USERNAME</span><span class=\"cm-operator\">=</span><span>myusername </span><span class=\"cm-attribute\">-r</span><span> mygithubname/example.product </span><span class=\"cm-attribute\">--add</span><span> env.global</span><span>\n</span><span class=\"cm-def\">$ travis</span><span> encrypt </span><span class=\"cm-def\">SAUCE_ACCESS_KEY</span><span class=\"cm-operator\">=</span><span>myaccesskey </span><span class=\"cm-attribute\">-r</span><span> mygithubname/example.product </span><span class=\"cm-attribute\">--add</span><span> env.global</span></code></pre>\n    </div>\n</li>\n</ol>\n<p>Make sure to use your own Sauce Labs username and access key, and your\nproductâ€™s Github-repository path (with format username/repo).</p>\n<p>Finally, enable Travis-CI-tests for you product either at\n<a href=\"travis-ci.org\">Travis-CI.org</a> or at <a href=\"github.com\">GitHub</a>.</p>\n<p>Done. If I forgot something, Iâ€™ll update this post.</p>\n<h2>Behind the basics: Test level status reporting for Sauce Labs</h2>\n<p>By default, Sauce Labs doesnâ€™t really know did the Selenium tests on it\npass or fail. To pass that information from our test runner on Travis-CI\nto Sauce Labs, we need to add some extra code into our test setup.</p>\n<p>At first, append the following into the end of\n<code>src/example/product/testing.py</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"python\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">re</span><span>\n</span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">os</span><span>\n</span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">httplib</span><span>\n</span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">base64</span><span>\n</span><span class=\"cm-keyword\">try</span><span>:</span><span>\n</span><span>    </span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">json</span><span>\n</span><span>    </span><span class=\"cm-keyword\">assert</span><span> </span><span class=\"cm-variable\">json</span><span>  </span><span class=\"cm-comment\"># pyflakes</span><span>\n</span><span class=\"cm-keyword\">except</span><span> </span><span class=\"cm-variable\">ImportError</span><span>:</span><span>\n</span><span>    </span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">simplejson</span><span> </span><span class=\"cm-keyword\">as</span><span> </span><span class=\"cm-variable\">json</span><span>\n\n</span><span class=\"cm-keyword\">from</span><span> </span><span class=\"cm-variable\">robot</span><span>.</span><span class=\"cm-property\">libraries</span><span>.</span><span class=\"cm-property\">BuiltIn</span><span> </span><span class=\"cm-keyword\">import</span><span> </span><span class=\"cm-variable\">BuiltIn</span><span>\n\n</span><span class=\"cm-variable\">USERNAME_ACCESS_KEY</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">re</span><span>.</span><span class=\"cm-property\">compile</span><span>(</span><span class=\"cm-string\">'^(http|https):\\/\\/([^:]+):([^@]+)@'</span><span>)</span><span>\n\n\n</span><span class=\"cm-keyword\">class</span><span> </span><span class=\"cm-def\">Keywords</span><span>:</span><span>\n</span><span>    </span><span class=\"cm-keyword\">def</span><span> </span><span class=\"cm-def\">report_sauce_status</span><span>(</span><span class=\"cm-variable-2\">self</span><span>, </span><span class=\"cm-variable\">status</span><span>, </span><span class=\"cm-variable\">tags</span><span class=\"cm-operator\">=</span><span>[], </span><span class=\"cm-variable\">remote_url</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">''</span><span>):</span><span>\n</span><span>        </span><span class=\"cm-variable\">job_id</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">BuiltIn</span><span>().</span><span class=\"cm-property\">get_library_instance</span><span>(</span><span>\n</span><span>            </span><span class=\"cm-string\">'Selenium2Library'</span><span>).</span><span class=\"cm-property\">_current_browser</span><span>().</span><span class=\"cm-property\">session_id</span><span>\n\n</span><span>        </span><span class=\"cm-keyword\">if</span><span> </span><span class=\"cm-variable\">USERNAME_ACCESS_KEY</span><span>.</span><span class=\"cm-property\">match</span><span>(</span><span class=\"cm-variable\">remote_url</span><span>):</span><span>\n</span><span>            </span><span class=\"cm-variable\">username</span><span>, </span><span class=\"cm-variable\">access_key</span><span> </span><span class=\"cm-operator\">=</span><span>\\</span><span>\n</span><span>                </span><span class=\"cm-variable\">USERNAME_ACCESS_KEY</span><span>.</span><span class=\"cm-property\">findall</span><span>(</span><span class=\"cm-variable\">remote_url</span><span>)[</span><span class=\"cm-number\">0</span><span>][</span><span class=\"cm-number\">1</span><span>:]</span><span>\n</span><span>        </span><span class=\"cm-keyword\">else</span><span>:</span><span>\n</span><span>            </span><span class=\"cm-variable\">username</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">environ</span><span>.</span><span class=\"cm-property\">get</span><span>(</span><span class=\"cm-string\">'SAUCE_USERNAME'</span><span>)</span><span>\n</span><span>            </span><span class=\"cm-variable\">access_key</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">os</span><span>.</span><span class=\"cm-property\">environ</span><span>.</span><span class=\"cm-property\">get</span><span>(</span><span class=\"cm-string\">'SAUCE_ACCESS_KEY'</span><span>)</span><span>\n\n</span><span>        </span><span class=\"cm-keyword\">if</span><span> </span><span class=\"cm-keyword\">not</span><span> </span><span class=\"cm-variable\">job_id</span><span>:</span><span>\n</span><span>            </span><span class=\"cm-keyword\">return</span><span> </span><span class=\"cm-string\">u\"No Sauce job id found. Skipping...\"</span><span>\n</span><span>        </span><span class=\"cm-keyword\">elif</span><span> </span><span class=\"cm-keyword\">not</span><span> </span><span class=\"cm-variable\">username</span><span> </span><span class=\"cm-keyword\">or</span><span> </span><span class=\"cm-keyword\">not</span><span> </span><span class=\"cm-variable\">access_key</span><span>:</span><span>\n</span><span>            </span><span class=\"cm-keyword\">return</span><span> </span><span class=\"cm-string\">u\"No Sauce environment variables found. Skipping...\"</span><span>\n\n</span><span>        </span><span class=\"cm-variable\">token</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">base64</span><span>.</span><span class=\"cm-property\">encodestring</span><span>(</span><span class=\"cm-string\">'%s:%s'</span><span> </span><span class=\"cm-operator\">%</span><span> (</span><span class=\"cm-variable\">username</span><span>, </span><span class=\"cm-variable\">access_key</span><span>))[:</span><span class=\"cm-operator\">-</span><span class=\"cm-number\">1</span><span>]</span><span>\n</span><span>        </span><span class=\"cm-variable\">body</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">json</span><span>.</span><span class=\"cm-property\">dumps</span><span>({</span><span class=\"cm-string\">'passed'</span><span>: </span><span class=\"cm-variable\">status</span><span> </span><span class=\"cm-operator\">==</span><span> </span><span class=\"cm-string\">'PASS'</span><span>,</span><span>\n</span><span>                           </span><span class=\"cm-string\">'tags'</span><span>: </span><span class=\"cm-variable\">tags</span><span>})</span><span>\n\n</span><span>        </span><span class=\"cm-variable\">connection</span><span> </span><span class=\"cm-operator\">=</span><span> </span><span class=\"cm-variable\">httplib</span><span>.</span><span class=\"cm-property\">HTTPConnection</span><span>(</span><span class=\"cm-string\">'saucelabs.com'</span><span>)</span><span>\n</span><span>        </span><span class=\"cm-variable\">connection</span><span>.</span><span class=\"cm-property\">request</span><span>(</span><span class=\"cm-string\">'PUT'</span><span>, </span><span class=\"cm-string\">'/rest/v1/%s/jobs/%s'</span><span> </span><span class=\"cm-operator\">%</span><span> (</span><span>\n</span><span>            </span><span class=\"cm-variable\">username</span><span>, </span><span class=\"cm-variable\">job_id</span><span>), </span><span class=\"cm-variable\">body</span><span>,</span><span>\n</span><span>            </span><span class=\"cm-variable\">headers</span><span class=\"cm-operator\">=</span><span>{</span><span class=\"cm-string\">'Authorization'</span><span>: </span><span class=\"cm-string\">'Basic %s'</span><span> </span><span class=\"cm-operator\">%</span><span> </span><span class=\"cm-variable\">token</span><span>}</span><span>\n</span><span>        )</span><span>\n</span><span>        </span><span class=\"cm-keyword\">return</span><span> </span><span class=\"cm-variable\">connection</span><span>.</span><span class=\"cm-property\">getresponse</span><span>().</span><span class=\"cm-property\">status</span></code></pre>\n    </div>\n<p>This code defines a custom Robot Framework keyword library with a\nkeyword for passing the test status (and other information) back to\nSauce Labs.</p>\n<p>Next, we update <code>src/example/product/tests/robot_test.txt</code> to store the\nsession id during the setup of every test and send the test result back\nto Sauce Labs during the teardown of every test:</p>\n<div class=\"gatsby-highlight\" data-language=\"robotframework\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-header\">*** Settings ***</span><span>\n\n</span><span class=\"cm-meta\">Library</span><span>  </span><span class=\"cm-string\">Selenium2Library</span><span>  </span><span class=\"cm-attribute\">timeout</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">10</span><span>  </span><span class=\"cm-attribute\">implicit_wait</span><span class=\"cm-operator\">=</span><span class=\"cm-string\">0.5</span><span>\n</span><span class=\"cm-meta\">Library</span><span>  </span><span class=\"cm-string\">example.product.testing.Keywords</span><span>\n\n</span><span class=\"cm-meta\">Test Setup</span><span>  </span><span class=\"cm-keyword\">Start</span><span> </span><span class=\"cm-keyword\">browser</span><span>\n</span><span class=\"cm-meta\">Test Teardown</span><span>  </span><span class=\"cm-keyword\">Run</span><span> </span><span class=\"cm-keyword\">keywords</span><span>  </span><span class=\"cm-string\">Report</span><span> </span><span class=\"cm-string\">test</span><span> </span><span class=\"cm-string\">status</span><span>  </span><span class=\"cm-string\">Close</span><span> </span><span class=\"cm-string\">All</span><span> </span><span class=\"cm-string\">Browsers</span><span>\n\n</span><span class=\"cm-header\">*** Variables ***</span><span>\n\n</span><span class=\"cm-variable-2\">${ZOPE_HOST}</span><span> </span><span class=\"cm-operator\">=</span><span>  </span><span class=\"cm-string\">localhost</span><span>\n</span><span class=\"cm-variable-2\">${ZOPE_PORT}</span><span> </span><span class=\"cm-operator\">=</span><span>  </span><span class=\"cm-string\">55001</span><span>\n</span><span class=\"cm-variable-2\">${ZOPE_URL}</span><span> </span><span class=\"cm-operator\">=</span><span>  </span><span class=\"cm-operator\">http://${ZOPE_HOST}:</span><span class=\"cm-variable-2\">${ZOPE_PORT</span><span class=\"cm-variable-2\">}</span><span>\n\n</span><span class=\"cm-variable-2\">${PLONE_SITE_ID}</span><span> </span><span class=\"cm-operator\">=</span><span>  </span><span class=\"cm-string\">plone</span><span>\n</span><span class=\"cm-variable-2\">${PLONE_URL}</span><span> </span><span class=\"cm-operator\">=</span><span>  </span><span class=\"cm-variable-2\">${ZOPE_URL}</span><span class=\"cm-string\">/</span><span class=\"cm-variable-2\">${PLONE_SITE_ID</span><span class=\"cm-variable-2\">}</span><span>\n\n</span><span class=\"cm-variable-2\">${BROWSER}</span><span> </span><span class=\"cm-operator\">=</span><span>  </span><span class=\"cm-string\">Firefox</span><span>\n</span><span class=\"cm-variable-2\">${REMOTE_URL}</span><span> </span><span class=\"cm-operator\">=</span><span>\n</span><span class=\"cm-variable-2\">${DESIRED_CAPABILITIES}</span><span> </span><span class=\"cm-operator\">=</span><span>  </span><span class=\"cm-operator\">platform:</span><span class=\"cm-string\">Linux</span><span>\n</span><span class=\"cm-variable-2\">${BUILD_NUMBER}</span><span> </span><span class=\"cm-operator\">=</span><span>  </span><span class=\"cm-string\">manual</span><span>\n\n</span><span class=\"cm-header\">*** Test Cases ***</span><span>\n\n</span><span class=\"cm-string header\">Plone site</span><span>\n</span><span class=\"cm-bracket\">    </span><span class=\"cm-meta\">[Tags]</span><span class=\"cm-bracket\">  </span><span class=\"cm-tag\">start</span><span>\n</span><span>    </span><span class=\"cm-keyword\">Go</span><span> </span><span class=\"cm-keyword\">to</span><span>  </span><span class=\"cm-variable-2\">${PLONE_URL</span><span class=\"cm-variable-2\">}</span><span>\n</span><span>    </span><span class=\"cm-keyword\">Page</span><span> </span><span class=\"cm-keyword\">should</span><span> </span><span class=\"cm-keyword\">contain</span><span>  </span><span class=\"cm-string\">Plone</span><span> </span><span class=\"cm-string\">site</span><span>\n\n</span><span class=\"cm-header\">*** Keywords ***</span><span>\n\n</span><span class=\"cm-def\">Start</span><span> </span><span class=\"cm-def\">browser</span><span>\n</span><span>    </span><span class=\"cm-variable-2\">${BUILD_INFO}</span><span> </span><span class=\"cm-operator\">=</span><span>  </span><span class=\"cm-keyword\">Set</span><span> </span><span class=\"cm-keyword\">variable</span><span>\n</span><span>    </span><span class=\"cm-bracket\">...</span><span>           </span><span class=\"cm-operator\">build:${BUILD_NUMBER},name:</span><span class=\"cm-variable-2\">${SUITE_NAME}</span><span> </span><span class=\"cm-bracket\">|</span><span> </span><span class=\"cm-variable-2\">${TEST_NAME</span><span class=\"cm-variable-2\">}</span><span>\n</span><span>    </span><span class=\"cm-keyword\">Open</span><span> </span><span class=\"cm-keyword\">browser</span><span>  </span><span class=\"cm-variable-2\">${PLONE_URL}</span><span>  </span><span class=\"cm-variable-2\">${BROWSER</span><span class=\"cm-variable-2\">}</span><span>\n</span><span>    </span><span class=\"cm-bracket\">...</span><span>           </span><span class=\"cm-attribute\">remote_url</span><span class=\"cm-operator\">=</span><span class=\"cm-variable-2\">${REMOTE_URL</span><span class=\"cm-variable-2\">}</span><span>\n</span><span>    </span><span class=\"cm-bracket\">...</span><span>           </span><span class=\"cm-attribute\">desired_capabilities</span><span class=\"cm-operator\">=</span><span class=\"cm-variable-2\">${DESIRED_CAPABILITIES}</span><span class=\"cm-string\">,</span><span class=\"cm-variable-2\">${BUILD_INFO</span><span class=\"cm-variable-2\">}</span><span>\n\n</span><span class=\"cm-def\">Report</span><span> </span><span class=\"cm-def\">test</span><span> </span><span class=\"cm-def\">status</span><span>\n</span><span>    </span><span class=\"cm-keyword\">Report</span><span> </span><span class=\"cm-keyword\">sauce</span><span> </span><span class=\"cm-keyword\">status</span><span>  </span><span class=\"cm-variable-2\">${TEST_STATUS}</span><span>  </span><span class=\"cm-variable-2\">${TEST_TAGS}</span><span>  </span><span class=\"cm-variable-2\">${REMOTE_URL</span><span class=\"cm-variable-2\">}</span></code></pre>\n    </div>\n<p>Please, note how we had to replace suite setup and teardown with test\nsetup and teardown) to open a new Selenium session for every test.</p>\n<p>This worked for me. I hope it works for you too.</p>\n<p><strong>example.product</strong> is available at:\n<a href=\"https://github.com/datakurre/example.product\">https://github.com/datakurre/example.product</a></p>","frontmatter":{"title":"Cross-browser test your Plone add-on with Robot Framework, Travis-CI and Sauce Labs","tags":["Plone","Robot Framework","Sauce Labs","Selenium","Testing","Travis CI"],"date":"March 12, 2013","published":"2013-03-12 06:00:00"}}},"pageContext":{"slug":"/2013/03/cross-browser-test-your-plone-add-on.html/","previous":{"fields":{"slug":"/2013/02/overview-of-new-robot-framework-goodies.html/"},"frontmatter":{"title":"Overview of the new Robot Framework goodies for Plone"}},"next":{"fields":{"slug":"/2013/04/generate-annotated-screenshots-with.html/"},"frontmatter":{"title":"Generate annotated screenshots with plone.app.robotframework"}}}},"staticQueryHashes":["63159454"],"slicesMap":{}}