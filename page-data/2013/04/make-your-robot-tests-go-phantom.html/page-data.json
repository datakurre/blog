{"componentChunkName":"component---src-templates-blog-post-js","path":"/2013/04/make-your-robot-tests-go-phantom.html/","result":{"data":{"site":{"siteMetadata":{"title":"Asko Soukka","author":"Asko Soukka"}},"markdownRemark":{"id":"2f3bc621-dbb5-528d-b1ea-af32b8d8058b","fields":{"slug":"/2013/04/make-your-robot-tests-go-phantom.html/"},"excerpt":"A new version of\nrobotframework-selenium2library\nhas just been released, and it (>= 1.2.0) comes with full support for\nPhantomJS, the famous headless WebKit…","html":"<p>A new version of\n<a href=\"https://pypi.python.org/pypi/robotframework-selenium2library/\">robotframework-selenium2library</a>\nhas just been released, and it (<code>>= 1.2.0</code>) comes with full support for\n<a href=\"http://phantomjs.org/\">PhantomJS</a>, the famous <strong>headless</strong> WebKit\nbrowser. Thanks a lot to <a href=\"https://github.com/j1z0\">Jeremy</a> for cutting\nthat release and\n<a href=\"https://github.com/detro/ghostdriver\">GhostDriver</a>-project for the\nactual WebDriver-driver for PhantomJS.</p>\n<p>To make the story short:</p>\n<ol>\n<li><a href=\"http://phantomjs.org/download.html\">Download PhantomJS</a>\n(<code>>= 1.8.0</code>), unpack it and place the <code>phantomjs</code>-binary somehere on\nyour path so that it can be located by the Selenium bindings for\nPython.</li>\n<li>Update your Selenium-packages (for Plone, update version pins and do\nthe buildout). You’ll need at least Selenium <code>>= 2.28.0</code> and\nrobotframework-selenium2library <code>>=1.2.0</code>.</li>\n<li>Execute your tests so that the <strong>Open Browser</strong>-keyword of\nSelenium2Library will be called with a named argument\n<code>browser=phantomjs</code>. See also <a href=\"http://rtomac.github.io/robotframework-selenium2library/doc/Selenium2Library.html#Open%20Browser\">the keyword\ndocumentation</a>.</li>\n</ol>\n<p>With\n<a href=\"http://pypi.python.org/pypi/plone.app.robotframework\">plone.app.robotframework</a>\n(<a href=\"http://developer.plone.org/reference_manuals/external/plone.app.robotframework/happy.html\">tutorial</a>)\nand a buildout environment, you can do part 3. simply with</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ bin</span><span>/robot </span><span class=\"cm-attribute\">-v</span><span> BROWSER:phantomjs ...</span></code></pre>\n    </div>\n<p>when you are running tests against <code>bin/robot-server</code> as recommended\nwhile writing your tests.</p>\n<p>Or</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ ROBOT_BROWSER</span><span class=\"cm-operator\">=</span><span>phantomjs bin/test </span><span class=\"cm-attribute\">-t</span><span> ...</span></code></pre>\n    </div>\n<p>when you are running test with <code>zope.testrunner</code> as recommended with a\nCI setup.</p>","frontmatter":{"title":"Make your Robot tests go Phantom","tags":["PhantomJS","Plone","Robot Framework","Selenium"],"date":"April 27, 2013","published":"2013-04-27 06:00:00"}}},"pageContext":{"slug":"/2013/04/make-your-robot-tests-go-phantom.html/","previous":{"fields":{"slug":"/2013/04/generate-annotated-screenshots-with.html/"},"frontmatter":{"title":"Generate annotated screenshots with plone.app.robotframework"}},"next":{"fields":{"slug":"/2013/05/test-fixture-driven-development-for.html/"},"frontmatter":{"title":"Test fixture driven development for Plone add-ons?"}}}},"staticQueryHashes":["63159454"],"slicesMap":{}}