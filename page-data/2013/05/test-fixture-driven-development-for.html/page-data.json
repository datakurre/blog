{"componentChunkName":"component---src-templates-blog-post-js","path":"/2013/05/test-fixture-driven-development-for.html/","result":{"data":{"site":{"siteMetadata":{"title":"Asko Soukka","author":"Asko Soukka"}},"markdownRemark":{"id":"31582c55-3147-5540-88ee-d943ba6dc6e3","fields":{"slug":"/2013/05/test-fixture-driven-development-for.html/"},"excerpt":"You may have already seen Maurizio Delmonte’s\ndemo of\ncollective.cover, the\nnew Tiles based front-page\nproduct for Plone. It’s based on the same\ntechnologies as…","html":"<p>You may have already seen <a href=\"http://www.youtube.com/watch?v=h_rsSL1e4i4\">Maurizio Delmonte’s\ndemo</a> of\n<a href=\"http://pypi.python.org/pypi/collective.cover\">collective.cover</a>, the\nnew <a href=\"http://pypi.python.org/pypi/plone.tiles\">Tiles</a> based front-page\nproduct for <a href=\"http://plone.org\">Plone</a>. It’s based on the same\ntechnologies as <a href=\"http://www.screencast.com/t/1BFjd89Xio\">Deco</a>, but it\nactually delivers. Just amazing work from our South American Plone\nfriends.</p>\n<p>Here’s a new (developer) way to try out this wonderful product:</p>\n<ol>\n<li>\n<p>Download <code>bootstrap.py</code></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ curl</span><span> </span><span class=\"cm-attribute\">-O</span><span> http://downloads.buildout.org/2/bootstrap.py</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Write <code>buildout.cfg</code></p>\n<div class=\"gatsby-highlight\" data-language=\"properties\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-header\">[buildout]</span><span>\n</span><span class=\"cm-def\">extends </span><span>=</span><span class=\"cm-quote\"> http</span><span>:</span><span class=\"cm-quote\">//dist.plone.org/release/4.3-latest/versions.cfg</span><span>\n</span><span class=\"cm-def\">versions </span><span>=</span><span class=\"cm-quote\"> versions</span><span>\n</span><span class=\"cm-def\">parts </span><span>=</span><span class=\"cm-quote\"> robot</span><span>\n\n</span><span class=\"cm-header\">[robot]</span><span>\n</span><span class=\"cm-def\">recipe </span><span>=</span><span class=\"cm-quote\"> zc.recipe.egg</span><span>\n</span><span class=\"cm-def\">eggs </span><span>=</span><span>\n</span><span class=\"cm-def\">    collective.cover[test]</span><span>\n</span><span class=\"cm-def\">    plone.app.robotframework</span><span>\n\n</span><span class=\"cm-header\">[versions]</span><span>\n</span><span class=\"cm-comment\"># These versions are from collective.cover/versions.cfg</span><span>\n</span><span class=\"cm-def\">collective.js.jqueryui </span><span>=</span><span class=\"cm-quote\"> 1.10.1.2</span><span>\n</span><span class=\"cm-def\">plone.app.blocks </span><span>=</span><span class=\"cm-quote\"> 1.0</span><span>\n</span><span class=\"cm-def\">plone.app.drafts </span><span>=</span><span class=\"cm-quote\"> 1.0a2</span><span>\n</span><span class=\"cm-def\">plone.app.jquery </span><span>=</span><span class=\"cm-quote\"> 1.7.2</span><span>\n</span><span class=\"cm-def\">plone.app.jquerytools </span><span>=</span><span class=\"cm-quote\"> 1.5.5</span><span>\n</span><span class=\"cm-def\">plone.app.tiles </span><span>=</span><span class=\"cm-quote\"> 1.0.1</span><span>\n</span><span class=\"cm-def\">plone.tiles </span><span>=</span><span class=\"cm-quote\"> 1.2</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Run the buildout</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ python</span><span> bootstrap.py</span><span>\n</span><span class=\"cm-def\">$ bin</span><span>/buildout</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Start the installed <code>bin/robot-server</code> with a specific functional\ntest fixture shipped in <a href=\"http://pypi.python.org/pypi/collective.cover\">collective.cover</a></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ bin</span><span>/robot-server collective.cover.testing.FUNCTIONAL_TESTING</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Wait for <code>bin/robot-server</code> to start a volatile demo instance for\nyou</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-number\">12</span><span>:05:09 [ wait ] Starting Zope </span><span class=\"cm-number\">2</span><span> server</span><span>\n</span><span class=\"cm-number\">12</span><span>:05:41 [ ready ] Started Zope </span><span class=\"cm-number\">2</span><span> server</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Open browser at <a href=\"http://localhost:55001/plone/\">http://localhost:55001/plone/</a></p>\n</li>\n<li>\n<p>Login with username <code>admin</code> and password <code>secret</code>, click <em>Add new\n…</em>-menu to add a new cover and have fun.</p>\n</li>\n</ol>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <p style=\"text-align: center;\"><iframe src=\"http://www.youtube.com/embed/uegWBNyR888\" frameborder=\"0\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe></p> </div>\n<p>Wait… what just happened?</p>\n<h2>Meet the robot-server</h2>\n<p><em>robot-server</em> is a test fixture based development server for Plone\nadd-on development, and is currently shipped with\n<a href=\"http://pypi.python.org/pypi/plone.app.robotframework\">plone.app.robotframework</a>.\nIt’s main function is to ease writing of <a href=\"http://robotframework.org/\">Robot\nFramework</a> tests for Plone, but it can be\nused as a more general development tool.</p>\n<p>About a year ago, <a href=\"https://twitter.com/__gotcha\">Godefroid Chapelle</a>\nfigured out that we could re-use Plone’s and its add-ons’ modern test\nfixtures (see\n<a href=\"http://pypi.python.org/pypi/plone.app.testing\">plone.app.testing</a>) to\nstart a testable Plone sandbox directly from Robot Framework’s own test\nrunner. Even better finding was that you could re-use the test fixtures\nto start a Plone sandbox in a way that you could ran multiple isolated\nRobot Framework test against it with running expensive setups and\nteardowns only once. This work was finished at <a href=\"http://wnww.coactivate.org/projects/barcelona-sprint/project-home\">the Barcelona Plone\nTesting\nSprint</a>\nin the last February.</p>\n<p>To see better, how test fixtures are set up by robot-server, run it with\n<code>-v</code> for <code>--verbose</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ bin</span><span>/robot-server collective.cover.testing.FUNCTIONAL_TESTING </span><span class=\"cm-attribute\">-v</span><span>\n</span><span class=\"cm-number\">12</span><span>:07:10 [ wait ] Starting Zope </span><span class=\"cm-number\">2</span><span> server</span><span>\n</span><span class=\"cm-number\">12</span><span>:07:10 [ wait ] Set up plone.testing.zca.LayerCleanup</span><span>\n</span><span class=\"cm-number\">12</span><span>:07:10 [ wait ] Set up plone.testing.z2.Startup</span><span>\n</span><span class=\"cm-number\">12</span><span>:07:10 [ wait ] Set up plone.app.testing.layers.PloneFixture</span><span>\n</span><span class=\"cm-number\">12</span><span>:07:18 [ wait ] Set up collective.cover.testing.Fixture</span><span>\n</span><span class=\"cm-number\">12</span><span>:07:25 [ wait ] Set up plone.testing.z2.ZServer</span><span>\n</span><span class=\"cm-number\">12</span><span>:07:26 [ wait ] Set up collective.cover.testing.collective.cover:Functional</span><span>\n</span><span class=\"cm-number\">12</span><span>:07:26 [ ready ] Started Zope </span><span class=\"cm-number\">2</span><span> server</span></code></pre>\n    </div>\n<p>But that’s not all.</p>\n<h2>robot-server, reloaded</h2>\n<ol>\n<li>\n<p>Write the following <code>develop.cfg</code> (on a Mac or Linux) next to the\nprevious <code>buildout.cfg</code></p>\n<div class=\"gatsby-highlight\" data-language=\"properties\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-header\">[buildout]</span><span>\n</span><span class=\"cm-def\">extends </span><span>=</span><span class=\"cm-quote\"> buildout.cfg</span><span>\n</span><span class=\"cm-def\">extensions </span><span>=</span><span class=\"cm-quote\"> mr.developer</span><span>\n</span><span class=\"cm-def\">auto-checkout </span><span>=</span><span class=\"cm-quote\"> collective.cover</span><span>\n\n</span><span class=\"cm-header\">[sources]</span><span>\n</span><span class=\"cm-def\">collective.cover </span><span>=</span><span class=\"cm-quote\"> git https</span><span>:</span><span class=\"cm-quote\">//github.com/collective/collective.cover.git</span><span>\n\n</span><span class=\"cm-header\">[robot]</span><span>\n</span><span class=\"cm-def\">eggs +</span><span>=</span><span class=\"cm-quote\"> plone.app.robotframework[reload]</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Run the buildout</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ bin</span><span>/buildout </span><span class=\"cm-attribute\">-c</span><span> develop.cfg</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Start <code>bin/robot-server</code></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-def\">$ bin</span><span>/robot-server collective.cover.testing.FUNCTIONAL_TESTING </span><span class=\"cm-attribute\">-v</span><span>\n</span><span class=\"cm-number\">12</span><span>:26:25 [ wait ] Starting Zope </span><span class=\"cm-number\">2</span><span> server</span><span>\n</span><span class=\"cm-number\">12</span><span>:26:25 [ wait ] Set up plone.testing.zca.LayerCleanup</span><span>\n</span><span class=\"cm-number\">12</span><span>:26:25 [ wait ] Set up plone.testing.z2.Startup</span><span>\n</span><span class=\"cm-number\">12</span><span>:26:25 [ wait ] Set up plone.app.testing.layers.PloneFixture</span><span>\n</span><span class=\"cm-number\">12</span><span>:26:33 [ wait ] Watchdog is watching </span><span class=\"cm-keyword\">for</span><span> changes </span><span class=\"cm-keyword\">in</span><span> src</span><span>\n</span><span class=\"cm-number\">12</span><span>:26:33 [ wait ] Fork loop now starting on parent process </span><span class=\"cm-number\">98241</span><span>\n</span><span class=\"cm-number\">12</span><span>:26:33 [ wait ] Fork loop forked a new child process </span><span class=\"cm-number\">98244</span><span>\n</span><span class=\"cm-number\">12</span><span>:26:33 [ wait ] Set up collective.cover.testing.Fixture</span><span>\n</span><span class=\"cm-number\">12</span><span>:26:40 [ wait ] Set up plone.testing.z2.ZServer</span><span>\n</span><span class=\"cm-number\">12</span><span>:26:41 [ wait ] Set up collective.cover.testing.collective.cover:Functional</span><span>\n</span><span class=\"cm-number\">12</span><span>:26:41 [ ready ] Zope </span><span class=\"cm-number\">2</span><span> server started</span></code></pre>\n    </div>\n</li>\n<li>\n<p>Edit a file under <code>src/collective/cover</code> and see how the sandbox is\nteared down to <code>PLONE_FIXTURE</code> and all code for <a href=\"http://pypi.python.org/pypi/collective.cover\">collective.cover</a>\nis being reloaded</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\">\n      <pre class=\" cm-s-solarized\"><code><span class=\"cm-number\">12</span><span>:27:49 [ wait ] Watchdog got modified event on collective.cover/src/collective/cover/config.py</span><span>\n</span><span class=\"cm-number\">12</span><span>:27:49 [ wait ] Pruning Zope </span><span class=\"cm-number\">2</span><span> server</span><span>\n</span><span class=\"cm-number\">12</span><span>:27:49 [ wait ] Tear down collective.cover.testing.collective.cover:Functional</span><span>\n</span><span class=\"cm-number\">12</span><span>:27:49 [ wait ] Tear down plone.testing.z2.ZServer</span><span>\n</span><span class=\"cm-number\">12</span><span>:27:50 [ wait ] Tear down collective.cover.testing.Fixture</span><span>\n</span><span class=\"cm-number\">12</span><span>:27:50 [ wait ] Fork loop terminated child process </span><span class=\"cm-number\">98244</span><span>\n</span><span class=\"cm-number\">12</span><span>:27:50 [ wait ] Fork loop forked a new child process </span><span class=\"cm-number\">98536</span><span>\n</span><span class=\"cm-number\">12</span><span>:27:50 [ wait ] Set up collective.cover.testing.Fixture</span><span>\n</span><span class=\"cm-number\">12</span><span>:27:57 [ wait ] Set up plone.testing.z2.ZServer</span><span>\n</span><span class=\"cm-number\">12</span><span>:27:58 [ wait ] Set up collective.cover.testing.collective.cover:Functional</span><span>\n</span><span class=\"cm-number\">12</span><span>:27:58 [ ready ] Zope </span><span class=\"cm-number\">2</span><span> server started</span></code></pre>\n    </div>\n</li>\n</ol>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 75%; position: relative; height: 0; overflow: hidden; margin-bottom: 1.0725rem\" > <p style=\"text-align: center;\"><iframe src=\"http://www.youtube.com/embed/cDwAku2ZUqs\" frameborder=\"0\" allowfullscreen=\"\" style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe></p> </div>\n<p>In short, when <a href=\"http://pypi.python.org/pypi/plone.app.robotframework\">plone.app.robotframework</a> is required with <code>[reload]</code>\nit comes with a code reloading fork loop applied from\n<a href=\"http://pypi.python.org/pypi/sauna.reload\">sauna.reload</a>. It is not as\nfast as the original, but this time it works for all add-ons. And it\ndoes not only reload your code, but also re-builds your test fixture.\nFor example, all changes for add-on Generic Setup profile are applied\nwhen the profile is configured in test fixture.</p>\n<p>So, may be next time, when you start writing a new add-on for Plone, you\ncould start with writing a functional test fixture for it (see\n<a href=\"http://pypi.python.org/pypi/plone.app.testing\">plone.app.testing</a> and include a z2.ZSERVER_FIXTURE) and give\n<code>robot-server</code> a spin.</p>\n<p>Issues can be filed at\n<a href=\"https://github.com/plone/plone.app.robotframework/\">GitHub</a>. Thank you.</p>","frontmatter":{"title":"Test fixture driven development for Plone add-ons?","tags":["Plone","Testing"],"date":"May 10, 2013","published":"2013-05-10 06:00:00"}}},"pageContext":{"slug":"/2013/05/test-fixture-driven-development-for.html/","previous":{"fields":{"slug":"/2013/04/make-your-robot-tests-go-phantom.html/"},"frontmatter":{"title":"Make your Robot tests go Phantom"}},"next":{"fields":{"slug":"/2013/05/stay-accessible-robot-framework-library.html/"},"frontmatter":{"title":"Stay accessible – Robot Framework library for WAVE-toolbar"}}}},"staticQueryHashes":["63159454"],"slicesMap":{}}